@model Mittagessen.Web.Models.EnrollmentModel
           
@{
    ViewBag.Title = "Mittagessen";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    var EnrollmentViewModel = function(userEnrolled, numberOfPortions, numberOfEnrollments) {
        this.userEnrolled = ko.observable(userEnrolled);
        this.numberOfPortions = ko.observable(numberOfPortions);
        this.numberOfEnrollments = ko.observable(numberOfEnrollments);
        this.changingEnrollment = ko.observable(false);
        this.showIsFull = ko.computed(function() {
            return this.userEnrolled() == false && parseInt(this.numberOfEnrollments()) >= parseInt(this.numberOfPortions());
        }, this);
        this.canEnroll = ko.computed(function() {
            return this.showIsFull() == false && this.userEnrolled() == false;
        }, this);
    };

    var ViewModels = new Array();

    $(function () {
        $(".lunch-info").each(function () {
            userEnrolled = $(this).find(".user-enrolled-msg").is(":visible");
            numberOfPortions = $(this).find(".number-of-portions-info").text();
            numberOfEnrollments = $(this).find(".number-of-enrollments-info").text();
            var vm = new EnrollmentViewModel(userEnrolled, numberOfPortions, numberOfEnrollments);
            ViewModels[$(this).attr("lunch-id")] = vm;
            ko.applyBindings(vm, this);
        });

        $.connection.enrollmentHub.client.lunchInfoUpdated = updateLunchInfo;
        $.connection.hub.start();

        $(".enroll-button").click(function () {
            lunchId = $(this).attr("lunch-id");
            ViewModels[lunchId].changingEnrollment(true);
            $.post('@Url.Action("EnrollUser")', { lunchId: lunchId }, function (result) {
                if (result.success) {
                    ViewModels[lunchId].userEnrolled(true);
                }
                ViewModels[lunchId].changingEnrollment(false);
            });
        });

        $(".disenroll-button").click(function () {
            lunchId = $(this).attr("lunch-id");
            ViewModels[lunchId].changingEnrollment(true);
            $.post('@Url.Action("DisenrollUser")', { lunchId: lunchId }, function (result) {
                if (result.success) {
                    ViewModels[lunchId].userEnrolled(false);
                }
                ViewModels[lunchId].changingEnrollment(false);
            });
        });
    });

    function updateLunchInfo(lunchId, enrollments, portions) {
        ViewModels[lunchId].numberOfPortions(portions);
        ViewModels[lunchId].numberOfEnrollments(enrollments);
    }
</script>

<h2>Anmeldung</h2>

<div style="font-size:18px;font-family:Georgia;text-align:justify;margin-right:10px">
    Die Anmeldung ist jederzeit vor dem Mittagessen möglich, solange es die Anzahl der Portionen ermöglicht. Wenn Sie sich aber frühzeitig eine Portion sichern, helfen Sie uns damit die richtige Menge an Nahrungsmittel zu kaufen und alles ruhig vorbereiten.
</div>

@foreach (var lunch in Model.Lunches)
{    
    <div class="meal lunch-info" lunch-id="@lunch.Id">
        <div>
            <h5 style="float:left">@lunch.LunchDate.ToShortDateString() @lunch.LunchDate.ToShortTimeString()</h5>

        <span class="label label-success user-enrolled-msg" data-bind="visible: userEnrolled" @(Model.EnrolledByUser(lunch) ? null : "style=display:none")>Angemeldet</span>

            <img alt="@lunch.CookedMeal.Name" src="@lunch.CookedMeal.ImageName"  />
            <div style="min-height:40px"><h4>@lunch.CookedMeal.Name</h4></div>

            <table>
                <tr>
                    <td><span style='font-family:Verdana; font-weight:bolder'>Portionen:</span></td>
                    <td><span class="badge badge-info number-of-portions-info" data-bind="text: numberOfPortions">@lunch.NumberOfPortions</span></td>
                </tr>
                <tr>
                    <td><span style='font-family:Verdana; font-weight:bolder'>Angemeldete:</span></td>
                    <td><span class="badge badge-success number-of-enrollments-info" data-bind="text: numberOfEnrollments">@lunch.NumberOfEnrollments</span></td>
                </tr>
            </table>
            <div style="margin-left:auto;margin-right:auto;margin-top:10px;width:7em">

                @if (Model.IsAfterDeadline(lunch))
                {
                    <span class="badge badge-warning"><div class='termin-past-msg'>Termin vergangen</div></span>
                }
                else
                {
                    <input lunch-id="@lunch.Id" type='button' value='Abmelden' class='btn btn-danger disenroll-button' data-bind="visible: userEnrolled, disable: changingEnrollment" />

                    <span class="badge badge-info" data-bind="visible: showIsFull"><div class='termin-full-msg'>Termin voll</div></span>

                    <input lunch-id="@lunch.Id" type='button' value='Anmelden' class='btn btn-primary enroll-button' data-bind="visible: canEnroll, disable: changingEnrollment" />
                }
            </div>
        </div>
    </div>   
}
